`ifndef __MEM_COMMON_PKG
`define __MEM_COMMON_PKG

`include "verif.pkg"
`include "common.pkg"

package mem_common;
    import common::*;
    import instr::*;

    typedef struct packed {
        logic    valid;
        t_mem_id id;
        t_paddr  addr;
    } t_fe_fb_req;

    typedef struct packed {
        logic      valid;
        t_mem_id   id;
        t_rv_instr instr;
        t_paddr    pc;
    } t_fb_fe_rsp;

    typedef struct packed {
        logic    valid;
        t_mem_id id;
        t_paddr  addr;
    } t_mem_req_pkt;

    typedef struct packed {
        logic    valid;
        t_mem_id id;
        t_cl     data;
        `ifdef SIMULATION
        t_paddr  __addr_inst;
        `endif
    } t_mem_rsp_pkt;

    function t_rv_instr instr_from_cl(t_cl data, t_cl_offset offset);
        instr_from_cl = t_rv_instr'(data.B[offset +: RV_INSTR_BYTES]);
    endfunction

endpackage

`endif // __MEM_COMMON_PKG
