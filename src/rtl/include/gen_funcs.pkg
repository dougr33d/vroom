`ifndef __GEN_FUNCS_PKG
`define __GEN_FUNCS_PKG

/* verilator lint_off DECLFILENAME */
package gen_funcs;
    virtual class gen_funcs #(parameter IWIDTH=8);

        //
        // Find-First functions
        //

        static function logic[IWIDTH-1:0] find_first1 (logic[IWIDTH-1:0] inp);
            logic found = 1'b0;
            find_first1 = '0;
            find_first1[0] = inp[0];
            for (int i=0; i<IWIDTH; i++) begin
                find_first1[i] = inp[i] & ~found;
                found |= inp[i];
            end
        endfunction

        static function logic[IWIDTH-1:0] find_first0 (logic[IWIDTH-1:0] inp);
            find_first0 = find_first1(~inp);
        endfunction

        //
        // Find-Last functions
        //

        static function logic[IWIDTH-1:0] find_last1 (logic[IWIDTH-1:0] inp);
            logic[IWIDTH-1:0] inp_rev;
            logic[IWIDTH-1:0] rev_first;
            inp_rev = {<<{inp}};
            rev_first = find_first1(inp_rev);
            find_last1 = {<<{rev_first}};
        endfunction

        static function logic[IWIDTH-1:0] find_last0 (logic[IWIDTH-1:0] inp);
            find_last0 = find_last1(~inp);
        endfunction
    endclass

    virtual class gen_lg2_funcs #(parameter IWIDTH=8);
        static function logic[IWIDTH-1:0] find_first1_from (logic[IWIDTH-1:0] inp, logic[$clog2(IWIDTH)-1:0] from_idx);
            logic[IWIDTH-1:0] inp_ql = inp;
            for (int i=0; i<from_idx; i++)
                inp_ql[i] = 1'b0;
            find_first1_from = gen_funcs#(.IWIDTH(IWIDTH))::find_first1(inp_ql);
        endfunction

        static function logic[IWIDTH-1:0] find_first1_from_w (logic[IWIDTH-1:0] inp, logic[$clog2(IWIDTH)-1:0] from_idx);
            logic[IWIDTH-1:0] find_from;
            find_from = find_first1_from(inp, from_idx);
            find_first1_from_w = (|find_from) ? find_from : gen_funcs#(.IWIDTH(IWIDTH))::find_first1(inp);
        endfunction

        static function logic[$clog2(IWIDTH)-1:0] find_first1_enc (logic[IWIDTH-1:0] inp);
            logic[IWIDTH-1:0] inp_ff = gen_funcs#(.IWIDTH(IWIDTH))::find_first1(inp);
            find_first1_enc = oh_encode(inp_ff);
        endfunction

        static function logic[IWIDTH-1:0] find_last1_from (logic[IWIDTH-1:0] inp, logic[$clog2(IWIDTH)-1:0] from_idx);
            logic[IWIDTH-1:0] inp_ql = inp;
            for (int i=0; i<from_idx; i++)
                inp_ql[i] = 1'b0;
            find_last1_from = gen_funcs#(.IWIDTH(IWIDTH))::find_last1(inp_ql);
        endfunction

        static function logic[IWIDTH-1:0] find_last1_from_w (logic[IWIDTH-1:0] inp, logic[$clog2(IWIDTH)-1:0] from_idx);
            logic[IWIDTH-1:0] find_from;
            find_from = find_last1_from(inp, from_idx);
            find_last1_from_w = (|find_from) ? find_from : gen_funcs#(.IWIDTH(IWIDTH))::find_last1(inp);
        endfunction

        static function logic[$clog2(IWIDTH)-1:0] find_last1_enc (logic[IWIDTH-1:0] inp);
            logic[IWIDTH-1:0] inp_ff = gen_funcs#(.IWIDTH(IWIDTH))::find_last1(inp);
            find_last1_enc = oh_encode(inp_ff);
        endfunction

        static function logic[$clog2(IWIDTH)-1:0] oh_encode (logic[IWIDTH-1:0] inp);
            oh_encode = '0;
            for (int i=0; i<IWIDTH; i++) begin
                oh_encode |= (inp[i] ? i[$clog2(IWIDTH)-1:0] : '0);
            end
        endfunction
    endclass

    virtual class mux_funcs #(parameter IWIDTH=8, parameter type T);
        static function T aomux (T[IWIDTH-1:0] inps, logic[IWIDTH-1:0] sels);
            aomux = T'('0);
            for (int i=0; i<IWIDTH; i++) begin
                aomux |= (sels[i] ? inps[i] : '0);
            end
        endfunction

        static function T uaomux (T inps [IWIDTH-1:0], logic[IWIDTH-1:0] sels);
            uaomux = T'('0);
            for (int i=0; i<IWIDTH; i++) begin
                uaomux |= (sels[i] ? inps[i] : '0);
            end
        endfunction
    endclass

    virtual class sext_funcs #(parameter IWIDTH=8, OWIDTH=32);
        static function logic[OWIDTH-1:0] sext (logic[IWIDTH-1:0] inp);
            sext[OWIDTH-1:0] = {OWIDTH{inp[IWIDTH-1]}};
            sext[IWIDTH-1:0] = inp[IWIDTH-1:0];
        endfunction
    endclass

    virtual class counter_funcs #(parameter IWIDTH=8);
        //
        // CountOnes
        //

        static function logic[$clog2(IWIDTH):0] ucountones (logic inp[IWIDTH-1:0]);
            ucountones = '0;
            for (int i=0; i<IWIDTH; i++) begin
                ucountones += ($clog2(IWIDTH)+1)'(inp[i]);
            end
        endfunction
    endclass


endpackage
/* verilator lint_on DECLFILENAME */

`endif // __GEN_FUNCS_PKG
